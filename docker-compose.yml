services: 
  # Users-API
  users-api-svc:
    image: 'yarp-users-api:localhost'
    depends_on:
      - postgres
      - seq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - EFConfiguration__ConnectionString=${POSTGRES_CONNECTION_STRING}
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 5001:80
    networks:
      - proxybackend

  # Products-API
  products-api-svc:
    image: 'yarp-products-api:localhost'
    depends_on:
      - postgres
      - seq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - EFConfiguration__ConnectionString=${POSTGRES_CONNECTION_STRING}
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 5002:80
    networks:
      - proxybackend

  # Reports-API
  reports-api-svc:
    image: 'yarp-reports-api:localhost'
    depends_on:
      - postgres
      - seq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - EFConfiguration__ConnectionString=${POSTGRES_CONNECTION_STRING}
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 5003:80
    networks:
      - proxybackend

  # Postgres
  postgres:
    container_name: yarp-container-pg
    image: postgres
    hostname: localhost
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - app-postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - proxybackend

  # PgAdmin Web UI
  pgadmin:
    container_name: yarp-container-pgadmin
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    restart: unless-stopped
    networks:
      - proxybackend

  # Datalust Seq
  seq:
    container_name: yarp-container-seq
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"
    networks:
      - proxybackend

networks:
  proxybackend:
    name: proxybackend
    driver: bridge

volumes:
  app-postgres-data:
